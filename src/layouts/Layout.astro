---
import { ClientRouter } from "astro:transitions";
import { ModeWatcher } from "mode-watcher";
import Header from "$lib/components/header/Header.astro";
import "@styles/app.css";

interface Props {
    title: string;
}
const { title } = Astro.props;
---

<html>
    <head>
        <title>{title}</title>
        <ClientRouter fallback="swap" />
        <script is:inline>
            const isBrowser = typeof localStorage !== "undefined";
            const getThemePreference = () => {
                if (isBrowser && localStorage.getItem("theme")) {
                    return localStorage.getItem("theme");
                }
                return window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "light";
            };
            const isDark = getThemePreference() === "dark";
            document.documentElement.classList[isDark ? "add" : "remove"](
                "dark",
            );

            if (isBrowser) {
                const observer = new MutationObserver(() => {
                    const isDark =
                        document.documentElement.classList.contains("dark");
                    localStorage.setItem("theme", isDark ? "dark" : "light");
                });
                observer.observe(document.documentElement, {
                    attributes: true,
                    attributeFilter: ["class"],
                });
            }
        </script>
    </head>
    <body class="flex max-w-screen flex-col justify-between items-center">
        <ModeWatcher client:load />
        <Header />
        <main class="overflow-x-clip flex-1 w-max-screen w-full px-1">
            <slot />
        </main>
    </body>
</html>
